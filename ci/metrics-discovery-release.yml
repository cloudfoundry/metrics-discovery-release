groups:
- name: metrics-discovery
  jobs:
    - metrics-discovery-tests
    - claim-cfd
    - cf-deploy
    - cats
    - test-metrics-agent
    - test-releases-can-be-exported
    - metrics-discovery-promotion
    - unclaim-cfd
    - metrics-discovery-main-promotion

- name: release
  jobs:
    - metrics-discovery-create-final-release
    - metrics-discovery-bumper-check
    - metrics-discovery-merge-to-develop
    - metrics-discovery-cut-major
    - metrics-discovery-cut-minor
    - metrics-discovery-cut-patch

resource_types:
- name: pcf-pool
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource
  type: docker-image

resources:
- name: cf-env
  type: pcf-pool
  source:
    api_token: ((toolsmith-api-key))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment
  tags:
  - vsphere-nimbus

- name: 24h
  source:
    interval: 24h
  type: time

- name: cf-acceptance-tests
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
  type: git

- name: cf-deployment
  source:
    branch: release-candidate
    private_key: ((cf-loggregator-oauth-bot-key))
    uri: https://github.com/cloudfoundry/cf-deployment
  type: git

- name: cf-deployment-concourse-tasks
  source:
    tag_filter: v*
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
  type: git

- name: cf-deployment-concourse-tasks-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
    tag: latest
  type: docker-image

- name: cf-drain-cli
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-drain-cli
  type: git

- name: concourse-tasks
  source:
    branch: master
    uri: https://github.com/pivotal-cf/concourse-tasks
  type: git

- name: loggregator-ci
  source:
    branch: master
    private_key: ((cf-loggregator-oauth-bot-key))
    uri: git@github.com:cloudfoundry/loggregator-ci
  type: git

- name: metrics-discovery-release
  source:
    branch: develop
    ignore_paths:
    - .final_builds
    - releases
    private_key: ((cf-loggregator-oauth-bot-key))
    uri: git@github.com:cloudfoundry/metrics-discovery-release.git
  type: git

- name: metrics-discovery-release-elect
  source:
    branch: release-elect
    ignore_paths:
    - .final_builds
    - releases
    private_key: ((cf-loggregator-oauth-bot-key))
    uri: git@github.com:cloudfoundry/metrics-discovery-release.git
  type: git

- name: metrics-discovery-release-main
  type: github-release
  source:
    branch: main
    disable_ci_skip: true
    private_key: ((cf-loggregator-oauth-bot-key))
    uri: git@github.com:cloudfoundry/metrics-discovery-release.git
  type: git

- name: metrics-discovery-github-release-drafts
  type: github-release
  source:
    access_token: ((access-token))
    drafts: true
    repository: metrics-discovery-release
    user: cloudfoundry

- name: metrics-discovery-github-release-published
  type: github-release
  source:
    access_token: ((access-token))
    repository: metrics-discovery-release
    user: cloudfoundry

- name: metrics-discovery-version
  type: semver
  source:
    driver: git
    uri: git@github.com:cloudfoundry/metrics-discovery-release
    branch: main
    file: src/version
    private_key: ((cf-loggregator-oauth-bot-key))

- name: metrics-discovery-release-main-version
  type: git
  source:
    uri: git@github.com:cloudfoundry/metrics-discovery-release
    branch: main
    clean_tags: true
    private_key: ((cf-loggregator-oauth-bot-key))
    paths:
    - src/version

jobs:

################################################################################################################
#                                              Unit Tests
################################################################################################################
- name: metrics-discovery-tests
  plan:
  - in_parallel:
    - get: loggregator-ci
    - get: 24h
      trigger: true
    - get: metrics-discovery-release
      trigger: true
  - in_parallel:
    - file: loggregator-ci/tasks/go-test/task.yml
      input_mapping:
        source-repo: metrics-discovery-release
      task: run-tests
    - do:
      - file: loggregator-ci/tasks/go-windows-tests/build-binary/task.yml
        input_mapping:
          release: metrics-discovery-release
        task: build-windows-test-binary
      - file: loggregator-ci/tasks/go-windows-tests/run-tests/task.yml
        task: run-windows-tests
  serial: true


################################################################################################################
#                                              CLAIM ENV AND DEPLOY
################################################################################################################
- name: claim-cfd
  serial: true
  plan:
  - get: metrics-discovery-release
    passed: ["metrics-discovery-tests"]
    trigger: true
  - put: cf-env
    tags:
    - vsphere-nimbus
    params:
      action: claim

- name: cf-deploy
  serial: true
  plan:
  - in_parallel:
    - get: loggregator-ci
    - get: cf-env
      passed: [claim-cfd]
      trigger: true
      tags:
      - vsphere-nimbus
    - get: cf-deployment
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: metrics-discovery-release
      passed:
      - metrics-discovery-tests
      trigger: true
    - get: cf-drain-cli
  - task: grab-cf-manifest
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: latest
      inputs:
      - name: cf-env
      - name: cf-deployment
      outputs:
      - name: generated-cf-deployment
      run:
        path: /bin/bash
        args:
        - -c
        - |
          set -eo pipefail
          eval "$(bbl print-env --metadata-file cf-env/metadata)"
          env_name=$(cat cf-env/name)
          system_domain="${env_name}.cf-app.com"

          echo "Delete CF deployment"
          bosh delete-deployment -d cf -n

          echo "Clean up releases"
          bosh clean-up --all -n

          echo "Making ops-file for releases that exist both in linux and windows"
          cat <<EOT >> release-ops.yml
          - type: replace
            path: /releases/name=diego
            value:
              name: diego
              version: 2.48.0
              url: https://bosh.io/d/github.com/cloudfoundry/diego-release?v=2.48.0
              sha1: fbf8ebfeda1f326f5d6834b9a621b88a548e06e3
          - type: replace
            path: /releases/name=garden-runc
            value:
              name: garden-runc
              version: 1.19.16
              sha1: c5bb4211adb7e94750b56e81eda9bb8e09eab3a0
              url: https://bosh.io/d/github.com/cloudfoundry/garden-runc-release?v=1.19.16
          - type: replace
            path: /releases/name=loggregator-agent
            value:
              name: loggregator-agent
              version: 6.1.2
              sha1: 7bd4ca5ab7f4b6cd3fefa1a8043bdf9ff9c94900
              url: https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=6.1.2
          - type: replace
            path: /releases/name=metrics-discovery
            value:
              name: metrics-discovery
              version: 3.0.1
              sha1: 4219b58972d20f6fccf1a4a167d915e34d86ee8a
              url: https://bosh.io/d/github.com/cloudfoundry/metrics-discovery-release?v=3.0.1
          EOT

          echo "Update CF manifest with Windows ops-files"
          bosh int cf-deployment/cf-deployment.yml \
          -o release-ops.yml \
          -o cf-deployment/operations/windows2019-cell.yml \
          -o cf-deployment/operations/use-latest-stemcell.yml \
          -o cf-deployment/operations/use-latest-windows2019-stemcell.yml \
          -o cf-deployment/operations/use-online-windows2019fs.yml -v system_domain="${system_domain}" > generated-cf-deployment/cf-deployment.yml

  - task: deploy-metrics-discovery
    file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
    input_mapping:
      cf-deployment: generated-cf-deployment
      release: metrics-discovery-release
      toolsmiths-env: cf-env
      ops-files: metrics-discovery-release
      vars-files: generated-cf-deployment


################################################################################################################
#                                      INTEGRATION TESTS
################################################################################################################
- name: test-releases-can-be-exported
  plan:
  - in_parallel:
    - get: concourse-tasks
    - get: cf-deployment-concourse-tasks-image
    - get: cf-env
      passed: [cf-deploy]
      tags:
      - vsphere-nimbus
    - get: metrics-discovery-release
      passed:
      - cf-deploy
      trigger: true
  - do:
    - file: concourse-tasks/release/export/task.yml
      input_mapping:
        cfd-env: cf-env
      params:
        RELEASE_NAMES: |
          metrics-discovery
      task: export-releases-xenial
    - file: concourse-tasks/release/export/task.yml
      input_mapping:
        cfd-env: cf-env
      params:
        RELEASE_NAMES: |
          metrics-discovery
        STEMCELL_OS: windows2019
      task: export-releases-windows2019
  serial: true
  serial_groups:
  - bosh-export-releases

- name: test-metrics-agent
  plan:
  - in_parallel:
    - get: loggregator-ci
    - get: cf-env
      passed: [cf-deploy]
      tags:
      - vsphere-nimbus
    - get: metrics-discovery-release
      passed:
      - cf-deploy
      trigger: true
  - file: loggregator-ci/tasks/test-metrics-agent/task.yml
    params:
      METRICS_AGENT_PORT: 14726
    task: test-metrics-agent
  serial: true
  serial_groups:
  - bosh-metrics-agent

- name: cats
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: cf-env
      passed: [cf-deploy]
      tags:
      - vsphere-nimbus
    - get: loggregator-ci
    - get: cf-acceptance-tests
    - get: metrics-discovery-release
      passed:
      - cf-deploy
      trigger: true
  - task: generate-config
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      toolsmiths-env: cf-env
      integration-configs: loggregator-ci
    params:
      CATS_INTEGRATION_CONFIG_FILE: cats-config.json
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      cf-acceptance-tests: cf-acceptance-tests
      integration-config: updated-integration-configs
    params:
      NODES: 9
      CONFIG_FILE_PATH: cats-config.json
    task: run-cats
  serial: true
  serial_groups:
  - bosh-cf-cats

- name: unclaim-cfd
  serial: true
  plan:
  - get: cf-env
    passed:
    - cats
    - test-metrics-agent
    - test-releases-can-be-exported
    trigger: true
    tags:
    - vsphere-nimbus
  - put: cf-env
    tags:
    - vsphere-nimbus
    params:
      env_file: cf-env/metadata
      action: unclaim


- name: metrics-discovery-promotion
  plan:
  - in_parallel:
    - get: develop
      passed:
      - cats
      - test-metrics-agent
      - test-releases-can-be-exported
      resource: metrics-discovery-release
      trigger: true
    - get: metrics-discovery-release-elect
  - params:
      repository: develop
    put: metrics-discovery-release-elect
  serial: true
- name: metrics-discovery-main-promotion
  plan:
  - in_parallel:
    - get: 24h
      trigger: true
    - get: metrics-discovery-release-elect
      passed:
      - metrics-discovery-promotion
      trigger: true
    - get: metrics-discovery-release-main
    - get: loggregator-ci
  - file: loggregator-ci/tasks/bumper/task.yml
    input_mapping:
      dest: metrics-discovery-release-main
      source: metrics-discovery-release-elect
    params:
      DEST_BRANCH: main
      SOURCE_BRANCH: release-elect
      TRACKER_API_TOKEN: 9a8e6bb0f9edf884e3880a540de40ad4
    task: bumper
  - params:
      repository: merged-dest
    put: metrics-discovery-release-main

################################################################################################################
#                                               Cut Releases
################################################################################################################
- name: metrics-discovery-bumper-check
  plan:
  - in_parallel:
      steps:
      - get: loggregator-ci
      - get: metrics-discovery-release-main
        trigger: true
      - get: metrics-discovery-github-release-published
  - file: loggregator-ci/tasks/bumper-check/task.yml
    input_mapping:
      published-release: metrics-discovery-github-release-published
      release: metrics-discovery-release-main
    params:
      SSH_KEY: ((loggregator-key))
      TRACKER_API_TOKEN: ((metric-egress-tracker-api-token))
    task: diff-main-last-release
  serial: true

- name: metrics-discovery-cut-patch
  plan:
  - params:
      bump: patch
    put: metrics-discovery-version

- name: metrics-discovery-cut-minor
  plan:
  - params:
      bump: minor
    put: metrics-discovery-version

- name: metrics-discovery-cut-major
  plan:
  - params:
      bump: major
    put: metrics-discovery-version

- name: metrics-discovery-create-final-release
  plan:
  - in_parallel:
      steps:
      - get: metrics-discovery-release-main-version
      - get: loggregator-ci
  - file: loggregator-ci/tasks/create-final-release/main/task.yml
    input_mapping:
      main-repo: metrics-discovery-release-main-version
    params:
      S3_ACCESS_KEY: ((s3-access-key-id))
      S3_SECRET_KEY: ((s3-secret-access-key))
      BLOBSTORE_BUCKET: metrics-discovery-release-blobs
      JSON_KEY: ((gcp-service-account-key))
      SSH_KEY: ((loggregator-key))
      RELEASE_NAME: metrics-discovery-release
      AUTO_BUMPABLE_COMMITS: |
        'Bump modules'
        'bump golang release'
        'Merge final release artifacts'
        'Create final release'
        'bump to'
    task: create-final-release
  - params:
      rebase: false
      repository: repos/main-repo
    put: metrics-discovery-release-main
  - try:
      file: loggregator-ci/tasks/create-final-release/should-publish/task.yml
      on_failure:
        params:
          body: github-release/body
          globs:
          - github-release/*.tgz
          name: github-release/name
          tag: github-release/tag
        put: metrics-discovery-github-release-drafts
      on_success:
        params:
          body: github-release/body
          globs:
          - github-release/*.tgz
          name: github-release/name
          tag: github-release/tag
        put: metrics-discovery-github-release-published
      task: should-publish
  serial: true

- name: metrics-discovery-merge-to-develop
  plan:
  - in_parallel:
      steps:
      - get: metrics-discovery-release
      - get: metrics-discovery-release-main
        passed:
        - metrics-discovery-create-final-release
        trigger: true
      - get: loggregator-ci
      - get: metrics-discovery-github-release-published
        trigger: true
  - config:
      container_limits: {}
      image_resource:
        source:
          repository: loggregator/base
        type: docker-image
      inputs:
      - name: main-repo
      - name: published-release
      platform: linux
      run:
        args:
        - -c
        - |
          set -e

          pushd main-repo > /dev/null
            main_sha=$(git rev-parse HEAD)
          popd

          published_sha=$(cat published-release/commit_sha)

          if [[ ${main_sha} != ${published_sha} ]]; then
            echo "Published release sha doesn't match main repo sha"
            echo "This job will retrigger once published release or main repo resource is updated"
            exit 1
          fi
        path: /bin/bash
    input_mapping:
      main-repo: metrics-discovery-release-main
      published-release: metrics-discovery-github-release-published
    task: wait-for-releases-to-match
  - file: loggregator-ci/tasks/merge-to-develop/task.yml
    input_mapping:
      develop-repo: metrics-discovery-release
      master-repo: metrics-discovery-release-main
    params:
      DEVELOP_BRANCH: develop
      MASTER_BRANCH: main
      SSH_KEY: ((loggregator-key))
    task: merge-back-to-develop
  - params:
      rebase: false
      repository: repos/develop-repo
    put: metrics-discovery-release
  serial: true
